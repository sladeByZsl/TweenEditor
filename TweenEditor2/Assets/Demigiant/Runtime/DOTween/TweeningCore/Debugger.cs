using UnityEngine;

namespace DG.Tweening.Core
{
	public static class Debugger
	{
		// Fields
		public static int logPriority;

		// Methods
		public static void Log(object message)
		{
			Debug.Log("DOTWEEN :: " + message);
		}

		public static void LogError(object message)
		{
			Debug.LogError("DOTWEEN :: " + message);
		}

		public static void LogInvalidTween(Tween t)
		{
			LogWarning("This Tween has been killed and is now invalid");
		}

		public static void LogMissingMaterialProperty(string propertyName)
		{
			LogWarning(string.Format("This material doesn't have a {0} property", propertyName));
		}

		public static void LogNestedTween(Tween t)
		{
			LogWarning("This Tween was added to a Sequence and can't be controlled directly");
		}

		public static void LogNonPathTween(Tween t)
		{
			LogWarning("This Tween is not a path tween");
		}

		public static void LogNullTween(Tween t)
		{
			LogWarning("Null Tween");
		}

		public static void LogRemoveActiveTweenError(string propertyName)
		{
			Log(string.Format("Error in RemoveActiveTween.{0}. It's been taken care of so no problems, but Daniele (DOTween's author) is trying to pinpoint it and it would be awesome if you could reproduce this log in a sample project and send it to him. Or even just write him the complete log that was generated by this message. Fixing this would make DOTween slightly faster. Thanks.", propertyName));
		}

		public static void LogReport(object message)
		{
			Debug.Log("<color=#00B500FF>DOTWEEN :: " + message + "</color>");
		}

		public static void LogWarning(object message)
		{
			Debug.LogWarning("DOTWEEN :: " + message);
		}

		public static void SetLogPriority(LogBehaviour logBehaviour)
		{
			if (logBehaviour != LogBehaviour.Default)
			{
				if (logBehaviour == LogBehaviour.Verbose)
				{
					logPriority = 2;
				}
				else
				{
					logPriority = 0;
				}
			}
			else
			{
				logPriority = 1;
			}
		}
	}
}